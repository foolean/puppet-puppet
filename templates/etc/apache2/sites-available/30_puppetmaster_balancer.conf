# FILENAME: 30_puppetmaster_frontend_8140.conf
#
# DESCRIPTION:
#   Apache2 configuration file for the Puppet Master frontend load-balancer.
#
##############################################################################

<% if @operatingsystem.downcase == 'opensuse' -%>
# Load the required modules
<% if @architecture.downcase == 'x86_64' -%>
LoadModule headers_module                 /usr/lib64/apache2-prefork/mod_headers.so
LoadModule lbmethod_byrequests_module     /usr/lib64/apache2-prefork/mod_lbmethod_byrequests.so
LoadModule passenger_module               /usr/lib64/apache2/mod_passenger.so
LoadModule proxy_module                   /usr/lib64/apache2-prefork/mod_proxy.so
LoadModule proxy_balancer_module          /usr/lib64/apache2-prefork/mod_proxy_balancer.so
LoadModule proxy_http_module              /usr/lib64/apache2-prefork/mod_proxy_http.so
LoadModule slotmem_shm_module             /usr/lib64/apache2-prefork/mod_slotmem_shm.so
LoadModule socache_shmcb_module           /usr/lib64/apache2-prefork/mod_socache_shmcb.so
LoadModule version_module                 /usr/lib64/apache2-prefork/mod_version.so
<% else -%>
LoadModule headers_module                 /usr/lib/apache2-prefork/mod_headers.so
LoadModule lbmethod_byrequests_module     /usr/lib/apache2-prefork/mod_lbmethod_byrequests.so
LoadModule passenger_module               /usr/lib/apache2/mod_passenger.so
LoadModule proxy_module                   /usr/lib/apache2-prefork/mod_proxy.so
LoadModule proxy_balancer_module          /usr/lib/apache2-prefork/mod_proxy_balancer.so
LoadModule proxy_http_module              /usr/lib/apache2-prefork/mod_proxy_http.so
LoadModule slotmem_shm_module             /usr/lib/apache2-prefork/mod_slotmem_shm.so
LoadModule socache_shmcb_module           /usr/lib/apache2-prefork/mod_socache_shmcb.so
LoadModule version_module                 /usr/lib/apache2-prefork/mod_version.so
<% end -%>

<% end -%>
# Define the load-balancer for the backend workers
<Proxy balancer://puppetmaster/>
<% if ( @remote_workers && ! @remote_workers.empty? ) -%>
<% @remote_workers.each do |worker_address| -%>
    BalancerMember http://<%= worker_address -%>:8140
<% end -%>
<% else -%>
<% i=0; while i < @workers.to_i do
      passenger_port = 18140 + i
      i = i + 1
-%>
    BalancerMember http://<%= @listen -%>:<%= passenger_port %>
<% end -%>
<% end -%>
</Proxy>

# Define the load-balancer for the certificate authority
<Proxy balancer://puppetmasterca/>
<% if ( @remote_ca && ! @remote_ca.empty? ) -%>
    # Puppet CA active worker
    BalancerMember http://<%= @remote_ca[0] -%>:8140
    # Puppet CA hot standby
    BalancerMember http://<%= @remote_ca[1] -%>:8140 status=+H
<% else -%>
    # Puppet CA active worker
    BalancerMember http://127.0.0.1:18138
    # Puppet CA hot standby
    BalancerMember http://127.0.0.1:18139 status=+H
<% end -%>
</Proxy>

Listen 8140

# Define the virtual host for this puppetmaster frontend balancer
<VirtualHost *:8140>
    # The name of this server
    ServerName <%= @servername %>

    # Logging
    LogLevel  <%= @log_level %>
    ErrorLog  <%= scope.lookupvar('puppet::apache2_logdir') -%>/puppetmaster_balancer_error.log
    CustomLog <%= scope.lookupvar('puppet::apache2_logdir') -%>/puppetmaster_balancer_access.log combined
    CustomLog <%= scope.lookupvar('puppet::apache2_logdir') -%>/puppetmaster_balancer_ssl_requests.log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

    # Enable SSL and the SSL proxy for this virtual host
    SSLEngine On
    SSLProxyEngine On

    SSLCertificateFile      <%= scope.lookupvar('settings::ssldir') -%>/certs/<%= @fqdn -%>.pem
    SSLCertificateKeyFile   <%= scope.lookupvar('settings::ssldir') -%>/private_keys/<%= @fqdn -%>.pem
    SSLCertificateChainFile <%= scope.lookupvar('settings::ssldir') -%>/ca/ca_crt.pem
    SSLCACertificateFile    <%= scope.lookupvar('settings::ssldir') -%>/ca/ca_crt.pem

    # CRL checking should be enabled; if you have problems with
    # Apache complaining about the CRL, disable the next line
    SSLCARevocationFile     <%= scope.lookupvar('settings::ssldir') -%>/ca/ca_crl.pem
    <IfVersion >= 2.4>
    SSLCARevocationCheck    chain
    </IfVersion>
    SSLVerifyClient         <%= @sslverifyclient %>
    SSLVerifyDepth          10
    SSLOptions              +StdEnvVars +ExportCertData

    # The following client headers record authentication information for down stream workers.
    RequestHeader set X-SSL-Subject   %{SSL_CLIENT_S_DN}e
    RequestHeader set X-Client-DN     %{SSL_CLIENT_S_DN}e
    RequestHeader set X-Client-Verify %{SSL_CLIENT_VERIFY}e

    <Location />
        SetHandler balancer-manager
        Order allow,deny
        # Always allow localhost
        Allow from 127.0.0.1
        # Allow hosts from the default site
<% if ( @clients && ! @clients.empty? ) -%>
<% @clients.each do |allow| -%>
        Allow from <%= allow %>
<% end -%>
<% end -%>
<% if @sites && ! @sites.empty? -%>
<% @sites.each do |site,data| -%>
        # Allow hosts from site '<%= site -%>'
<% if data && ! data.empty? -%>
<% data['clients'].each do |allow| -%>
        Allow from <%= allow %>
<% end -%>
<% end -%>
<% end -%>
<% end -%>
    </Location>

    # Ordering of ProxyPass directives is important

    # Direct all Pupet agent CA requests to a specific set of workers
    ProxyPassMatch   ^(/.*?)/(certificate.*?)/(.*)$ balancer://puppetmasterca
    ProxyPassReverse ^(/.*?)/(certificate.*?)/(.*)$ balancer://puppetmasterca

    # Direct all other requests to the default set of workers
    ProxyPass        / balancer://puppetmaster/
    ProxyPassReverse / balancer://puppetmaster/
    ProxyPreserveHost On

</VirtualHost>
