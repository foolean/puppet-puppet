# FILENAME: 40_puppetmaster_worker_<%= @port -%>.conf
#
# DESCRIPTION:
#   Apache2 configuration for the Puppet Master backend worker
#   running on port <%= @port -%>.
#
# USAGE:
#   Create the new Apache2 configuration:
#       SRC - port number from the file you're copying from
#       DST - port number to use in the destination file
#
#       sed s/${SRC}/${DST}/ 40_puppetmaster_worker_${SRC}.conf > \
#                            40_puppetmaster_worker_${DST}.conf
#
#   Create the new puppetmaster rack configuration
#
#       rsync -avxH /usr/share/puppet/rack/puppetmasterd{,_<%= @port -%>}/
#
##############################################################################

Listen <%= @listen -%>:<%= @port %>

# Define the virtual host for this puppetmaster worker
<VirtualHost <%= @listen -%>:<%= @port -%>>

    # Logging
    LogLevel  <%= @log_level %>
    ErrorLog  <%= scope.lookupvar('puppet::apache2_logdir') -%>/puppetmaster_worker_error.log
    CustomLog <%= scope.lookupvar('puppet::apache2_logdir') -%>/puppetmaster_worker_access.log combined

    # We're not going to use SSL on the backend
    SSLEngine off

    # Obtain authentication information from client request headers
    SetEnvIf X-Client-Verify "(.*)" SSL_CLIENT_VERIFY=$1
    SetEnvIf X-SSL-Client-DN "(.*)" SSL_CLIENT_S_DN=$1

    # Passenger should automatically detect
    # that this is a Rack application.
    RackAutoDetect On

    # Document root for this worker
    DocumentRoot /usr/share/puppet/rack/puppetmasterd_<%= @port -%>/public

    # Directory configuration
    # NOTE: access is controlled at the front-end balancer
    <Directory /usr/share/puppet/rack/puppetmasterd_<%= @port -%>>
        Options       None
        AllowOverride None
        <IfVersion < 2.4>
            Order         allow,deny
            Allow         from all
        </IfVersion>
        <IfVersion >= 2.4>
            Require       all granted
        </IfVersion>
    </Directory>

</VirtualHost>
